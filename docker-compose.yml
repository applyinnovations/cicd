services:
  cicd:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - tmp:/tmp
      - logs:/logs
      - secrets:/secrets
    networks:
      - cicd-caddy
    labels:
      caddy_1: cicd.applyinnovations.au
      caddy.reverse_proxy: "{{upstreams 80}}"

  dozzle:
    image: amir20/dozzle:latest
    environment:
      DOZZLE_ADDR: ":80"
      DOZZLE_BASE: "/logs"
      DOZZLE_HOSTNAME: cicd.applyinnovations.au
      DOZZLE_ENABLE_ACTIONS: true
      DOZZLE_NO_ANALYTICS: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - cicd-caddy
    labels:
      caddy_0: cicd.applyinnovations.au/logs
      caddy.reverse_proxy: "{{upstreams 80}}"


  caddy:
    image: lucaslorentz/caddy-docker-proxy:ci-alpine
    ports:
      - 80:80
      - 443:443
    networks:
      - cicd-caddy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - caddy_data:/data
    restart: unless-stopped
    deploy:
      labels: # Global options
        caddy.email: hello@applyinnovations.com.au
      placement:
        constraints:
          - node.role == manager
      replicas: 1
      restart_policy:
        condition: any
      resources:
        reservations:
          cpus: "0.1"
          memory: 200M

networks:
  cicd-caddy:
    name: cicd-caddy
    driver: bridge 

volumes:
  caddy_data:
  logs:
  tmp:
  secrets:
