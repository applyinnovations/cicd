services:
  cicd:
    restart: unless-stopped
    build:
      context: .
      dockerfile: cicd.Dockerfile
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - tmp:/tmp
      - logs:/logs
      - secrets:/secrets
    networks:
      - traefik-proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.cicd.priority=0
      - traefik.http.routers.cicd.rule=Host(`cicd.applyinnovations.au`)
      - traefik.http.services.cicd.loadbalancer.server.port=80

  dozzle:
    image: amir20/dozzle:latest
    environment:
      DOZZLE_ADDR: ":80"
      DOZZLE_BASE: "/logs"
      DOZZLE_HOSTNAME: cicd.applyinnovations.au
      DOZZLE_ENABLE_ACTIONS: true
      DOZZLE_NO_ANALYTICS: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik-proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.cicd-logs.priority=1
      - traefik.http.routers.cicd-logs.rule=Host(`cicd.applyinnovations.au`)
      - traefik.http.routers.cicd-logs.rule=PathPrefix(`/logs`)
      - traefik.http.services.cicd-logs.loadbalancer.server.port=80

  traefik:
    restart: unless-stopped
    build: 
      context: .
      dockerfile: traefik.Dockerfile
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik-proxy
    labels:
      - traefik.http.routers.traefik.rule=Host(`traefik.cicd.applyinnovations.au`)
      - traefik.http.routers.traefik.service=api@internal

networks:
  cicd-caddy:
    name: cicd-caddy
    driver: bridge
  traefik-proxy:
    name: traefik-proxy
    driver: bridge 

volumes:
  logs:
  tmp:
  secrets:
